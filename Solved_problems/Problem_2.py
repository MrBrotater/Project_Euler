"""
Problem 2: Event Fibonacci Numbers
----------------------------------
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""


def next_fibonacci_term(n1, n2):
    return n1 + n2


def solution():
    fibonacci_terms = [1, 2]
    next_term = next_fibonacci_term(fibonacci_terms[-2], fibonacci_terms[-1])
    while next_term < 4000000:
        fibonacci_terms.append(next_term)
        next_term = next_fibonacci_term(fibonacci_terms[-2], fibonacci_terms[-1])
    sum_of_even_terms = 0
    for term in fibonacci_terms:
        if term % 2 == 0:
            sum_of_even_terms += term
    print(sum_of_even_terms)
    return
